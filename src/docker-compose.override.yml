version: '3.4'

services:
  sqldata:
    container_name: sqldata
    environment:
        SA_PASSWORD: "SwN12345678"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "5433:1433"

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  product.api:
    container_name: product.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8000:80"

  customer.api:
    container_name: customer.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:CustomerConnectionString=Server=sqldata;Database=CustomerDb;User Id=sa;Password=SwN12345678" 
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
        - sqldata
        - rabbitmq
    ports:
      - "8001:80"

  ordering.api:
    container_name: ordering.api
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:OrderingConnectionString=Server=sqldata;Database=OrderDb;User Id=sa;Password=SwN12345678" 
        - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
        - sqldata
        - rabbitmq
    ports:
        - "8004:80"

